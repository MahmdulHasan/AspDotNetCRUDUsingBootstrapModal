@model BootstrapModalCRUD.Models.Employee
@{
    ViewBag.Title = "Index";
}


    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Open modal
    </button>

    <!-- The Modal -->
   
        <div class="modal fade" id="myModal">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Modal Heading</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    @using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { onsubmit = "return SubmitForm(this);" }))
                    {
                        <!-- Modal body -->
                        <div class="modal-body">

                            @Html.HiddenFor(model => model.EmployeeId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Position, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Position)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Office, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Age, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Salary, new { @class = "control-label" })
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                                <input type="reset" value="Reset" class="btn btn-warning" />
                            </div>


                        </div>

                        <!-- Modal footer -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    }
                </div>
            </div>
        </div>
   

<table id="employeeTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Position</th>
            <th>Office</th>
            <th>Age</th>
            <th>Salary</th>
            <th></th>

        </tr>
    </thead>
</table>

<link href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@section scripts{
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>

    <script>
        var  dataTable;
        $(document).ready(function () {
            dataTable= $("#employeeTable").DataTable({
                "ajax": {
                    "url": "/Employee/GetData",
                    "type": "GET",
                    "dataType": "json"

                },
                "columns": [
                    { "data": "Name" },
                    { "data": "Position" },
                    { "data": "Office" },
                    { "data": "Age" },
                    { "data": "Salary" },
                    { "data": "EmployeeId", "render": function (data) {
                        return "<a class='btn btn-primary btn-sm' onclick=Popupform('@Url.Action("AddOrEdit", "Employee")/"+ data +"')><i class='fa fa-pencil'></i> Edit</a> <a class='btn btn-danger btn-sm' style='margin-left:5px;' onclick=Deleteform('@Url.Action("Delete","Employee")/"+ data +"')><i class='fa fa-trash'></i> Delete</a>"
                    },
                        "orderable": false,
                        "searchable": false,
                        "width":"150px"
                    }
                ],
                "language": {
                    "emptyTable": "No data found, please click on <b>Add New</b> button"
                }
            });

        }); 

        $("#myModal").on("hidden.bs.modal", function () {
            $(this).find('form').trigger('reset');
        });
       
        function Popupform(url) {
            $.ajax({
                url: url,
                typr: "GET",
                dataType: "json",
                success: function (response) {
                    $('#EmployeeId').val(response.EmployeeId);
                    $('#Name').val(response.Name);
                    $('#Position').val(response.Position);
                    $('#Office').val(response.Office);
                    $('#Age').val(response.Age);
                    $('#Salary').val(response.Salary);
                    $('#myModal').modal('show');

                    $("#myModal").on("hidden.bs.modal", function () {
                        $('#EmployeeId').val(response.EmployeeId=0);
                        $(this).find('form').trigger('reset');
                    });
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            return false;
        }

        function SubmitForm(form) {
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {

                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: $(form).serialize(),
                    success: function (data) {
                        if (data.success) {

                            $("[data-dismiss=modal]").trigger({ type: "click" });
                            dataTable.ajax.reload();
                           
                        }
                    }

                });
            }
            return false;
        }
        function Deleteform(url) {
            if (confirm('Are You Sure To Delete Employee Record ?')) {
                $.ajax({
                    type: "POST",
                    url: url,
                    success: function (data) {
                        if (data.success) {
                          
                            dataTable.ajax.reload();
                        }
                    }
                });
            }
        }
    </script>
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>